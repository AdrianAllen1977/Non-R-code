##########################################################################Defining clusters / sub-clades of related sequences from a phylogeny########################################################################### Use the python program TreeCluster written by Niema Moshiri# https://github.com/niemasd/TreeCluster/## TreeCluster takes a Newick tree input and allows you to define subclades## You have to define a threshold of relatedness for tips / isolates / sequences## There are a variety of ways of defining the threshold# Installation:sudo pip install treecluster## on a machine for which you are not the sole usersudo pip install --user treecluster## Running TreeCluster once installed.# Navigate to the directory where you have the Newick tree file of interestTreeCluster.py [-h] [-i INPUT] -t THRESHOLD [-s SUPPORT] [-m METHOD] [-tf THRESHOLD_FREE]### See below for analysis parameter meanings-i INPUT, --input INPUT                        Input Tree File (default: stdin)  -t THRESHOLD, --threshold THRESHOLD                        Length Threshold (default: None)  -s SUPPORT, --support SUPPORT                        Branch Support Threshold (default: -inf)  -m METHOD, --method METHOD                        Clustering Method (options: avg_clade, length,                        length_clade, max, max_clade, med_clade, root_dist,                        single_linkage_clade) (default: max_clade)  -tf THRESHOLD_FREE, --threshold_free THRESHOLD_FREE                        Threshold-Free Approach (options: argmax_clusters)                        (default: None)                        ###############################################################################Example:Treecluster.py -i Border_genomes_Jul22.raxml.tree -t 5 -m max_clade # This run will define clusters based on tips exhibiting a maximum distance of 5 SNPs distance from eachother# the output is a string of text that indicates for all types, which cluster they belong to.# -1 is outputted for isolates which are singletons / not part of a cluster.# See below for more non-coding text detailing clustering methods and thresholds############################################################################################################ Clustering methods #############################1. Avg Clade: Cluster the leaves such that the following conditions hold for each cluster:The average pairwise distance between leaves in the cluster is at most tLeaves cannot be connected by branches with support less than or equal to sThe leaves in the cluster must define a clade in TFor a tree with n leaves, this algorithm is O(n) in the worst caseIf verbose mode is enabled (-v), the clades defined by the clusters will be printed to standard error2. Leaf Dist Avg: Cluster the leaves by cutting the tree at t distance away from the bottom of the tree, where "bottom" is defined as the average root-to-tip distanceBranches with support less than or equal to s are simply treated as infinitely longFor a tree with n leaves, this algorithm is O(n) in the worst case3. Leaf Dist Max: Cluster the leaves by cutting the tree at t distance away from the bottom of the tree, where "bottom" is defined as the furthest leaf from the rootBranches with support less than or equal to s are simply treated as infinitely longFor a tree with n leaves, this algorithm is O(n) in the worst case4. Leaf Dist Min: Cluster the leaves by cutting the tree at t distance away from the bottom of the tree, where "bottom" is defined as the closest leaf to the rootBranches with support less than or equal to s are simply treated as infinitely longFor a tree with n leaves, this algorithm is O(n) in the worst case5. Length: Cluster the leaves such that the following conditions hold for each cluster:The cluster does not contain any edges above length tLeaves cannot be connected by branches with support less than or equal to sFor a tree with n leaves, this algorithm is O(n) in the worst case6. Length Clade: Cluster the leaves such that the following conditions hold for each cluster:The cluster does not contain any edges above length tLeaves cannot be connected by branches with support less than or equal to sThe leaves in the cluster must define a clade in TFor a tree with n leaves, this algorithm is O(n) in the worst caseIf verbose mode is enabled (-v), the clades defined by the clusters will be printed to standard error7. Max: Cluster the leaves such that the following conditions hold for each cluster:The maximum pairwise distance between leaves in the cluster is at most tLeaves cannot be connected by branches with support less than or equal to sFor a tree with n leaves, this algorithm is O(n) in the worst case8. Max Clade: Cluster the leaves such that the following conditions hold for each cluster:The maximum pairwise distance between leaves in the cluster is at most tLeaves cannot be connected by branches with support less than or equal to sThe leaves in the cluster must define a clade in TFor a tree with n leaves, this algorithm is O(n) in the worst caseIf verbose mode is enabled (-v), the clades defined by the clusters will be printed to standard error9. Med Clade: Cluster the leaves such that the following conditions hold for each cluster:The median pairwise distance between leaves in the cluster is at most tLeaves cannot be connected by branches with support less than or equal to sThe leaves in the cluster must define a clade in TFor a tree with n leaves, this algorithm is O(nÂ² log n) in the worst caseIf verbose mode is enabled (-v), the clades defined by the clusters will be printed to standard error10. Root Dist: Cluster the leaves by cutting the tree at t distance away from the rootBranches with support less than or equal to s are simply treated as infinitely longFor a tree with n leaves, this algorithm is O(n) in the worst case11. Single Linkage: Cluster the leaves such that the following conditions hold:For any two leaves u and v, if the distance between u and v is at most t, they must be in the same clusterLeaves cannot be connected by branches with support less than or equal to sThe number of clusters is maximizedFor a tree with n leaves, this algorithm is O(n) in the worst case12. Sum Branch: Cluster the leaves such that the following conditions hold for each cluster:The total branch length of the spanning tree connecting the leaves of the cluster is at most tLeaves cannot be connected by branches with support less than or equal to sFor a tree with n leaves, this algorithm is O(n) in the worst case13. Sum Branch Clade: Cluster the leaves such that the following conditions hold for each cluster:The total branch length of the spanning tree connecting the leaves of the cluster is at most tLeaves cannot be connected by branches with support less than or equal to sThe leaves in the cluster must define a clade in TFor a tree with n leaves, this algorithm is O(n) in the worst caseIf verbose mode is enabled (-v), the clades defined by the clusters will be printed to standard errorThreshold-Free ApproachesArgmax Clusters: Choose the threshold that maximizes the number of non-singleton clusters over all thresholds from 0 to tCurrently, for the sake of speed, only every 0.001 threshold is tested (i.e., 0, 0.001, 0.002, ..., t)